#!/usr/bin/env ruby

##
# Simple client example that pushes messages using suj-pusher service via Redis.
#

require "redis"
require "multi_json"
require "benchmark"

APNS_TOKEN = "<ADD YOUR APNS TOKEN HERE>"
GCM_TOKEN  = "<ADD YOU GCM TOKEN HERE>"
APNS_KEY_FILE = "<ABSOLUTE PATH TO THE LOCATION OF YOUR APNS PRIVATE KEY>"
GCM_API_KEY   = "<SET YOUR GCM API KEY>"

# Build a message hash for APNS
msg = {
  apn_ids: [APNS_TOKEN],
  development: false,
  cert: File.read(APNS_KEY_FILE)
  data: {
    aps: {
      alert: "This is the message #{rand(100)}"
    }
  }
}

# Build a message hash for GCM
msg2 = {
  gcm_ids: [GCM_TOKEN],
  api_key: GCM_API_KEY,
  data: {
    leaving_msg: "YEAH"
  }
}

# Format the hash as a JSON string. We use multi_json gem for this but you are free to use any JSON encoder you want.
msg_json = MultiJson.dump(msg)

# Obtain a redis instance
redis = Redis.new({ host: "localhost", port: 6379})

# Push the message to the *suj_pusher_queue* in the redis server.
#redis.publish "suj_pusher_queue", msg_json
redis.lpush "pusher:suj_pusher_msgs", msg_json
